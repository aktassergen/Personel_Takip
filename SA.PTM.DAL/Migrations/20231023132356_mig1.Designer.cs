// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SA.PTM.DAL.Context;

#nullable disable

namespace SA.PTM.DAL.Migrations
{
    [DbContext(typeof(PersonelTakipDbContext))]
    [Migration("20231023132356_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Avans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AvansMiktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OdemeVadesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VerilisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Avanslar");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Bordro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BordroTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaasMiktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Bordrolar");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.EgitimBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.ToTable("EgitimBilgileri");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.IzinBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("IzinBaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IzinBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IzinTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("IzinBilgileri");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.MaasBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaasMiktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.ToTable("MaasBilgileri");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Okul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiplomaOrnegi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EgitimBilgisiId")
                        .HasColumnType("int");

                    b.Property<string>("EgitimTipleri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MezuniyetDerecesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MezuniyetTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OkulAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EgitimBilgisiId");

                    b.ToTable("Okullar");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.OzlukBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdliSicilBelgesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AileCuzdani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AskerlikBelgesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ehliyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IkametAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBasvurusu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("SaglikRaporu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sozlesme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.ToTable("OzlukBilgileri");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Anne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baba")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogumYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EgitimBilgisiId")
                        .HasColumnType("int");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedeniDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OzlukBilgisiId")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YasadigiSehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.Property<int>("maasBilgisiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.HasIndex("YoneticiId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Sertifika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlinanKurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EgitimBilgisiId")
                        .HasColumnType("int");

                    b.Property<string>("SertifikaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SertifikaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EgitimBilgisiId");

                    b.ToTable("Sertifikalar");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.SirketIciEgitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlinmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EgitimAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EgitimBilgisiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EgitimBilgisiId");

                    b.ToTable("SirketIciEgitimler");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Yonetici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KullaniciMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yoneticiler");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Avans", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithMany("Avanslar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Bordro", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithMany("Bordrolar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.EgitimBilgisi", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithOne("EgitimBilgisi")
                        .HasForeignKey("SA.PTM.Entity.Concrete.EgitimBilgisi", "PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.IzinBilgisi", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithMany("IzinBilgileri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.MaasBilgisi", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithOne("MaasBilgisi")
                        .HasForeignKey("SA.PTM.Entity.Concrete.MaasBilgisi", "PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Okul", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.EgitimBilgisi", "EgitimBilgisi")
                        .WithMany("Okullar")
                        .HasForeignKey("EgitimBilgisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EgitimBilgisi");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.OzlukBilgisi", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Personel", "Personel")
                        .WithOne("OzlukBilgisi")
                        .HasForeignKey("SA.PTM.Entity.Concrete.OzlukBilgisi", "PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Personel", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.Yonetici", "Yonetici")
                        .WithMany("Personeller")
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yonetici");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Sertifika", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.EgitimBilgisi", "EgitimBilgisi")
                        .WithMany("Sertifikalar")
                        .HasForeignKey("EgitimBilgisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EgitimBilgisi");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.SirketIciEgitim", b =>
                {
                    b.HasOne("SA.PTM.Entity.Concrete.EgitimBilgisi", "EgitimBilgisi")
                        .WithMany("SirketIciEgitimler")
                        .HasForeignKey("EgitimBilgisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EgitimBilgisi");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.EgitimBilgisi", b =>
                {
                    b.Navigation("Okullar");

                    b.Navigation("Sertifikalar");

                    b.Navigation("SirketIciEgitimler");
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Personel", b =>
                {
                    b.Navigation("Avanslar");

                    b.Navigation("Bordrolar");

                    b.Navigation("EgitimBilgisi")
                        .IsRequired();

                    b.Navigation("IzinBilgileri");

                    b.Navigation("MaasBilgisi")
                        .IsRequired();

                    b.Navigation("OzlukBilgisi")
                        .IsRequired();
                });

            modelBuilder.Entity("SA.PTM.Entity.Concrete.Yonetici", b =>
                {
                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
